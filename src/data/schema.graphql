# Exposes a URL that specifies the behaviour of this scalar.
directive @specifiedBy(
  # The URL that specifies the behaviour of this scalar.
  url: String!
) on SCALAR
type Auth {
  token: String!
  user: User!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

type Mutation {
  createTweet(data: TweetMutationInput!): TweetMutationPayload!
  upvoteTweet(id: String!): Tweet!
  downvoteTweet(id: String!): Tweet!
  createUser(password: String!, email: String!, name: String!): User!
  signIn(password: String!, email: String!): Auth!
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}

type Query {
  tweets(first: Float!): TweetConnection!
  tweet(id: String!): Tweet!
  users: [User!]!
  user(id: String!): User!
}

type Tweet implements Node {
  id: ID!
  author: User
  description: String!
  likes: Float
  createdAt: DateTime
  updatedAt: DateTime
}

type TweetConnection {
  edges: [TweetEdge!]!
  count: Float!
  pageInfo: PageInfo!
}

type TweetEdge {
  cursor: String!
  node: Tweet!
}

input TweetMutationInput {
  author: String!
  description: String!
}

type TweetMutationPayload {
  tweetEdge: TweetEdge!
}

type User implements Node {
  id: ID!
  email: String
  name: String
  password: String
  createdAt: DateTime
  updatedAt: DateTime
}
